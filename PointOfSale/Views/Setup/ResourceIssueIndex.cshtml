@model POSModel.ResourceIssueModel
@using POSBLL

@{
    ViewBag.Title = "ResourceIssueIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int counter = 1;
}

<div class="title clearfix">
    <h3>Resource Issue</h3>
</div>

<div class="clearfix"></div>

<div id="pop-up-div" class="modal fade" role="dialog">
</div>


@using (Html.BeginForm("ResourceIssueIndex", "Setup", FormMethod.Post, new { id = "search-form" }))
{
    <div class="form-group">
        <div class="row">

            <div class="col-md-3"> </div>
                           
            <div class="checkbox-sty-1 form-group col-md-3">
                <div>
                    @Html.CheckBoxFor(model => model.IsPublisher, new { @class = "form-control" })
                    @Html.LabelFor(model => model.IsPublisher)
                </div>
            </div>

            <div class="checkbox-sty-1 form-group col-md-6">
                <div>
                    @Html.CheckBoxFor(model => model.IsAuthor, new { @class = "form-control" })
                    @Html.LabelFor(model => model.IsAuthor)
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-grop_padding">
                    @Html.HiddenFor(x => x.SubscriberId)

                    @Html.LabelFor(model => model.ResourceId)
                    @Html.DropDownListFor(x => x.ResourceId, ViewBag.ResourceNameList as SelectList, "Choose one", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ResourceId)
                </div>
            </div>
            <div class="col-md-3" id="pub-party">
                <div class="form-grop_padding">
                    @Html.LabelFor(model => model.PublicationId)
                    @Html.DropDownListFor(x => x.PublicationId, ViewBag.ResourcePublicationList as SelectList, "Choose one", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PublicationId)
                </div>
            </div>
            <div class="col-md-3" id="pub-name" style="display:none">
                <div class="form-grop_padding">

                    @Html.LabelFor(model => model.PublicationName)
                    @Html.TextBoxFor(model => model.PublicationName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PublicationName)
                </div>
            </div>
            <div class="col-md-3" id="auth-party">
                <div class="form-grop_padding">
                    @Html.LabelFor(model => model.AuthorId)
                    @Html.DropDownListFor(x => x.AuthorId, ViewBag.ResourceAuthorList as SelectList, "Choose one", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorId)
                </div>
            </div>
            <div class="col-md-3" id="auth-name" style="display:none">
                <div class="form-grop_padding">

                    @Html.LabelFor(model => model.AuthorName)
                    @Html.TextBoxFor(model => model.AuthorName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorName)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-grop_padding">
                    @Html.LabelFor(model => model.GradeId)
                    @Html.DropDownListFor(x => x.GradeId, ViewBag.ResourceGradeList as SelectList, "Choose one", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GradeId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-grop_padding">
                    @Html.LabelFor(model => model.SubjectId)
                    @Html.DropDownListFor(x => x.SubjectId, ViewBag.ResourceSubjectList as SelectList, "Choose one", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubjectId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-grop_padding">
                    <button class="btn btn-search" type="submit" style="margin-top: 35px"><i class="fa fa-search"></i> Search</button>
                </div>
            </div>
        </div>
    </div>
}



@if (Model.ResourceIssueList != null)
{
    <div class="content-table">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover">
                <thead>
                    <tr>
                        <th class="width-30">
                            S.N.
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.ResourceCopyNumber)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.IsActive)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.IsAvailable)
                        </th>

                        <th>
                            Resource Issue
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ResourceIssueList)
                    {
                        <tr>
                            <td>
                                @counter
                            </td>

                            <td>
                                @Html.DisplayFor(model => item.ResourceCopyNumber)
                            </td>

                            <td>
                                @Html.CheckBoxFor(modelItem => item.IsActive)
                            </td>

                            <td>
                                @Html.CheckBoxFor(modelItem => item.IsAvailable)
                            </td>

                            <td>
                                <button class="btn btn-primary" onclick="IssueNew(@item.ResourceCopyId,@Model.SubscriberId)" id="check"> Issue</button>
                            </td>

                        </tr>
                        counter++;
                    }
                </tbody>
            </table>
        </div>
    </div>
}


@if (Model.ResourceIssueList != null)
{
    <div class="content-table">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover">
                <thead>
                    <tr>
                        <th class="width-30">
                            S.N.
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.ResourceCopyNumber)
                        </th>

                        <th>
                            Resource Return
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ResourceIssueList)
                    {
                        <tr>
                            <td>
                                @counter
                            </td>

                            <td>
                                @Html.DisplayFor(model => item.ResourceCopyNumber)
                            </td>

                            <td>
                                <button class="btn btn-primary" onclick="ReturnBack(@item.ResourceCopyId,@Model.SubscriberId)" id="check"> Return Back</button>
                            </td>

                        </tr>
                        counter++;
                    }
                </tbody>
            </table>
        </div>
    </div>
}



<script>
    function IssueNew(resCopyId, subId) {

        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/Setup/CreateResourceIssueSubscriber")',
            data: { resourceCopyId: resCopyId, subscriberId: subId },
            success: function (result) {
                $('#check')

                $('#pop-up-div').html(result).modal({
                    'show': true,
                    'backdrop': 'static'
                })
            },
            error: function () {
            }
        });
    }
    @*$('#chk input:checkbox').change(function () {
        $.ajax({
            url: '@Url.Action("CreateResourceIssue","Setup")',
            type: 'POST',
            data: { chk: false }
        });
    })
     $('#IsAvailable').on('save', function () {
         var chk = $('#IsAvailable').prop('checked');
         if(chk==true)
              chk.checked = false;
         else
              chk.checked = true;

    })*@
    $('.nepali-calendar').nepaliDatePicker({
        npdMonth: true,
        npdYear: true,
    });

    $('#ResourceId').change(function(){
        var resourceId= $('#ResourceId option:selected').val();

        if(resourceId !=''){
            WorkForce.loader.show();
            $.ajax({
                url: '@Url.Content("~/Setup/GetResourceWisePublication")',
                data: { resourceId: resourceId },
                success: function (result) {
                    if (result) {
                        //$.each(result, function (streams, stream) {
                        //    optionList += "<option value=" + stream.SelectId + ">" + stream.SelectText + "</option>";
                        //    streamId = stream.SelectId;
                        //});
                        //$('#StreamId').html(optionList);
                    }
                    WorkForce.loader.hide();
                },
                error: function (err) {
                    if (err.statusText == 'Unauthorized') {
                        ShowMessage('error', 'error', 'Please Login to Continue !!');
                    } else {
                        ShowMessage('error', 'error', 'Error !!');
                    }
                    WorkForce.loader.hide();
                }
            });
        } else {
            var optionList = "<option value>--Select One--</option>";
            $('#ResourceId').html(optionList);
        }
    })


     $('#IsPublisher').on('change', function () {
         PublisherLogic();
     })

    function PublisherLogic() {
        var chk = $('#IsPublisher').prop('checked');

        if (chk) {
            $('#pub-party').css('display', 'block');
            $('#pub-name').css('display', 'none');
            $('#PublicationName').prop('disabled', true);
            $('#PublicationId').removeAttr('disabled', true);
        }
        else {
            $('#pub-party').css('display', 'none');
            $('#pub-name').css('display', 'block');
            $('#PublicationName').removeAttr('disabled', true);
            $('#PublicationId').prop('disabled', true);
        }
    }

    $('#IsAuthor').on('change', function () {
        AuthorLogic();
    })

    function AuthorLogic() {
        var chk = $('#IsAuthor').prop('checked');

        if (chk) {
            $('#auth-party').css('display', 'block');
            $('#auth-name').css('display', 'none');
            $('#AuthorName').prop('disabled', true);
            $('#AuthorId').removeAttr('disabled', true);
        }
        else {
            $('#auth-party').css('display', 'none');
            $('#auth-name').css('display', 'block');
            $('#AuthorName').removeAttr('disabled', true);
            $('#AuthorId').prop('disabled', true);
        }
    }
</script>


